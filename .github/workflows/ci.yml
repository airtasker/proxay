name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  test:
    name: "test-node-${{ matrix.node-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.21, 16.20, 18.18, 20.10]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        env:
          JEST_JUNIT_OUTPUT_DIR: ./test-reports/jest
          JEST_JUNIT_OUTPUT_NAME: results.xml
          JEST_JUNIT_CLASSNAME: "{filepath}"
        run: yarn ci:test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: ./test-reports

      - name: Test summary
        uses: test-summary/action@v2
        with:
          paths: ./test-reports/jest/results.xml

  lint:
    name: "lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run prettier
        run: yarn lint:check

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - run: yarn build
      - run: npm link
      - run: npx proxay --help
      - run: |
          npx proxay -m record -h https://www.google.com -t tapes/ &
          # Wait until it loads.
          until (curl http://localhost:3000 2>&1 | grep Google &>/dev/null)
          do
            echo "Waiting until server ready..."
            sleep 5
          done

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
      - test
      - build
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - run: yarn build

      - name: Authenticate with npm registry
        run: echo "//registry.npmjs.org/:_authToken=$NPM_PUBLISH_TOKEN" > ~/.npmrc

      - name: Publish to npm registry
        run: npm publish --access=public
